% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pch_functions_Rcpp.R
\name{fast_haz_fun}
\alias{fast_haz_fun}
\alias{fast_cumhaz_fun}
\alias{fast_cdf_fun}
\alias{fast_pdf_fun}
\alias{fast_surv_fun}
\alias{fast_quant_fun}
\alias{fast_rng_fun}
\title{Fast C implementation of hazard, cumulative hazard, ... for piecewise constant hazards}
\usage{
fast_haz_fun(Tint, lambda)

fast_cumhaz_fun(Tint, lambda)

fast_cdf_fun(Tint, lambda)

fast_pdf_fun(Tint, lambda)

fast_surv_fun(Tint, lambda)

fast_quant_fun(Tint, lambda)

fast_rng_fun(Tint, lambda, discrete = TRUE)
}
\arguments{
\item{Tint}{left points of the time intervals the hazards are defined on}

\item{lambda}{hazards in the time intervals}

\item{discrete}{should surivial times be rounded down to the next whole day}
}
\value{
A function with one parameter, a vector of times where the function should be evaluated.

for fast_rng_fun: a function with the argument that draws \code{n} samples
from the survival distribution
}
\description{
Fast C implementation of hazard, cumulative hazard, ... for piecewise constant hazards
}
\details{
the last time interval extends to +Inf
}
\section{Functions}{
\itemize{
\item \code{fast_haz_fun()}: fast hazard function

\item \code{fast_cumhaz_fun()}: fast cumulative hazard function

\item \code{fast_cdf_fun()}: fast cumulative density function function

\item \code{fast_pdf_fun()}: fast probability density function

\item \code{fast_surv_fun()}: fast survival function

\item \code{fast_quant_fun()}: fast quantile function

\item \code{fast_rng_fun()}: fast random numbers from survival distribution

}}
\examples{
haz <- fast_haz_fun(c(0, 10, 20), c(10, 15, 7))
haz(seq(0, 30, by=0.1))
cumhaz <- fast_cumhaz_fun(c(0, 10, 20), c(10, 15, 7))
cumhaz(seq(0, 30, by=0.1))
cdf <- fast_cdf_fun(c(0, 10, 20), c(10, 15, 7))
cdf(seq(0, 30, by=0.1))
pdf <- fast_pdf_fun(c(0, 10, 20), c(10, 15, 7))
pdf(seq(0, 30, by=0.1))
surv <- fast_surv_fun(c(0, 10, 20), c(10, 15, 7))
surv(seq(0, 30, by=0.1))
quant <- fast_quant_fun(c(0, 10, 20), c(10, 15, 7))
quant(seq(0, 1, by=0.01))
rng <- fast_rng_fun(c(0, 10, 20), c(10, 15, 7))
rng(100)
}
