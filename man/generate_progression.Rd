% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_progression.R
\name{assumptions_progression}
\alias{assumptions_progression}
\alias{generate_progression}
\title{Create an empty assumtions data.frame for generate_progression}
\usage{
assumptions_progression()

generate_progression(condition, fixed_objects = NULL)
}
\arguments{
\item{condition}{condition row of Design dataset}

\item{fixed_objects}{fixed objects of Design dataset}
}
\value{
For generate_progression: a design tibble with default values invisibly

For generate_progression: A dataset with the columns t (time) and trt
(1=treatment, 0=control), evt (event, currently TRUE for all observations),
t_ice (time of intercurrent event), ice (intercurrent event)
}
\description{
Create an empty assumtions data.frame for generate_progression

Generate Dataset with changing hazards after disease progression
}
\details{
assumptions_progression prints the code to generate a default
design tibble for use with generate_progression and returns the
evaluated code invisibly. This function is intended to be used to copy
paste the code and edit the parameters.

Condidtion has to contain the following columns:
\itemize{
\item n_trt number of paitents in treatment arm
\item n_ctrl number of patients in control arm
\item hazard_ctrl hazard in the control arm
\item hazard_trt hazard in the treatment arm for not cured patients
\item hazard_after_prog hazard after disease progression
\item prog_rate_ctrl hazard rate for disease progression unter control
\item prog_rate_trt hazard rate for disease progression unter treatment
}
}
\section{Functions}{
\itemize{
\item \code{assumptions_progression}: generate default assumptions tibble

\item \code{generate_progression}: simulates a dataset with changing hazards after disease progression
}}

\examples{
Design <- assumptions_progression()
Design
one_simulation <- merge(
    assumptions_progression(),
    design_fixed_followup(),
    by=NULL
  ) |>
  tail(1) |>
  generate_progression()
head(one_simulation)
tail(one_simulation)
}
